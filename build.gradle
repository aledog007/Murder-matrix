buildscript {
  ext.kotlin_version = '2.0.21'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"


  }
}
apply plugin: 'kotlin'

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  // This allows you to "Build and run using IntelliJ IDEA", an option in IDEA's Settings.
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  // JUnit dependencies
  dependencies {
    testImplementation(platform('org.junit:junit-bom:5.11.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
  }

  // JUnit test configuration
  test {
    useJUnitPlatform()
    testLogging {
      events "passed", "skipped", "failed"
    }
  }
  // From https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
  // The article can be helpful when using assets.txt in your project.
  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    // projectFolder/assets
    File assetsFolder = new File("${project.rootDir}/assets/")
    // projectFolder/assets/assets.txt
    File assetsFile = new File(assetsFolder, "assets.txt")
    // delete that file in case we've already created it
    assetsFile.delete()

    // iterate through all files inside that folder
    // convert it to a relative path
    // and append it to the file assets.txt
    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

subprojects {
  version = projectVersion
  ext.appName = 'MurderMatrix'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    // You may want to remove the following line if you have errors downloading dependencies.
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }
  dependencies {
    api "io.github.spair:imgui-java-binding:1.87.5"
    api "io.github.spair:imgui-java-lwjgl3:1.87.5"
    api "io.github.spair:imgui-java-natives-linux:1.87.5"
    api "io.github.spair:imgui-java-natives-macos:1.87.5"
    api "io.github.spair:imgui-java-natives-windows:1.87.5"
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
    implementation 'com.azure:azure-ai-openai:1.0.0-beta.11'
  }
}

eclipse.project.name = 'MurderMatrix' + '-parent'
repositories {
  mavenCentral()
}
dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
kotlin {
  jvmToolchain(21)
}
